diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2e38c1bac..0c26a97f4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -15,6 +15,14 @@ endif ()
 if(POLICY CMP0048)
   cmake_policy(SET CMP0048 NEW)
 endif()
+# find_package() uses <PackageName>_ROOT variables.
+if(POLICY CMP0074)
+	cmake_policy(SET CMP0074 NEW)
+endif()
+# option() honors normal variables.
+if(POLICY CMP0077)
+	cmake_policy(SET CMP0077 NEW)
+endif()
 # MSVC runtime library flags are selected by an abstraction.
 if(POLICY CMP0091)
   cmake_policy(SET CMP0091 NEW)
@@ -66,7 +74,7 @@ else (BUILD_SHARED_LIBS)
 endif (BUILD_SHARED_LIBS)
 option(protobuf_BUILD_SHARED_LIBS "Build Shared Libraries" ${protobuf_BUILD_SHARED_LIBS_DEFAULT})
 include(CMakeDependentOption)
-cmake_dependent_option(protobuf_MSVC_STATIC_RUNTIME "Link static runtime libraries" ON
+cmake_dependent_option(protobuf_MSVC_STATIC_RUNTIME "Link static runtime libraries" OFF
   "NOT protobuf_BUILD_SHARED_LIBS" OFF)
 set(protobuf_WITH_ZLIB_DEFAULT ON)
 option(protobuf_WITH_ZLIB "Build with zlib support" ${protobuf_WITH_ZLIB_DEFAULT})
@@ -189,24 +197,16 @@ endif()
 
 set(_protobuf_FIND_ZLIB)
 if (protobuf_WITH_ZLIB)
-  find_package(ZLIB)
-  if (ZLIB_FOUND)
-    set(HAVE_ZLIB 1)
-    # FindZLIB module define ZLIB_INCLUDE_DIRS variable
-    # Set ZLIB_INCLUDE_DIRECTORIES for compatible
-    set(ZLIB_INCLUDE_DIRECTORIES ${ZLIB_INCLUDE_DIRECTORIES} ${ZLIB_INCLUDE_DIRS})
-    # Using imported target if exists
-    if (TARGET ZLIB::ZLIB)
-      set(ZLIB_LIBRARIES ZLIB::ZLIB)
-      set(_protobuf_FIND_ZLIB "if(NOT ZLIB_FOUND)\n  find_package(ZLIB)\nendif()")
-    endif (TARGET ZLIB::ZLIB)
-  else (ZLIB_FOUND)
-    set(HAVE_ZLIB 0)
-    # Explicitly set these to empty (override NOT_FOUND) so cmake doesn't
-    # complain when we use them later.
-    set(ZLIB_INCLUDE_DIRECTORIES)
-    set(ZLIB_LIBRARIES)
-  endif (ZLIB_FOUND)
+  if (NOT TARGET ZLIB::ZLIB)
+    find_package(ZLIB REQUIRED)
+  endif()
+  set(HAVE_ZLIB 1)
+  # FindZLIB module define ZLIB_INCLUDE_DIRS variable
+  # Set ZLIB_INCLUDE_DIRECTORIES for compatible
+  set(ZLIB_INCLUDE_DIRECTORIES ${ZLIB_INCLUDE_DIRECTORIES} ${ZLIB_INCLUDE_DIRS})
+  # Using imported target if exists
+  set(ZLIB_LIBRARIES ZLIB::ZLIB)
+  set(_protobuf_FIND_ZLIB "if(NOT ZLIB_FOUND AND NOT TARGET ZLIB::ZLIB)\n  find_package(ZLIB REQUIRED)\nendif()")
 endif (protobuf_WITH_ZLIB)
 
 if (HAVE_ZLIB)
@@ -332,7 +332,6 @@ else (MSVC)
 endif (MSVC)
 
 include_directories(
-  ${ZLIB_INCLUDE_DIRECTORIES}
   ${protobuf_BINARY_DIR}
   ${protobuf_SOURCE_DIR}/src)
 
diff --git a/src/google/protobuf/port.h b/src/google/protobuf/port.h
index 9ca45d966..6bbf1d164 100644
--- a/src/google/protobuf/port.h
+++ b/src/google/protobuf/port.h
@@ -38,6 +38,7 @@
 
 #include <cassert>
 #include <cstddef>
+#include <cstdint>
 #include <new>
 #include <string>
 #include <type_traits>
